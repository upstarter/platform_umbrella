var _user$project$Update$update = F2(
	function (msg, model) {
		var formFields = _user$project$Model$extractFormFields(model.subscribeForm);
		var subscribeForm = model.subscribeForm;
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'HandleFullNameInput':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							subscribeForm: _user$project$Model$Editing(
								_elm_lang$core$Native_Utils.update(
									formFields,
									{fullName: _p0._0}))
						}),
					{ctor: '[]'});
			case 'HandleEmailInput':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							subscribeForm: _user$project$Model$Editing(
								_elm_lang$core$Native_Utils.update(
									formFields,
									{email: _p0._0}))
						}),
					{ctor: '[]'});
			case 'HandleFormSubmit':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							subscribeForm: _user$project$Model$Saving(formFields)
						}),
					{
						ctor: '::',
						_0: _user$project$Commands$subscribe(subscribeForm),
						_1: {ctor: '[]'}
					});
			default:
				if (_p0._0.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{subscribeForm: _user$project$Model$Success}),
						{ctor: '[]'});
				} else {
					if (_p0._0._0.ctor === 'BadStatus') {
						var _p1 = A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Decoders$validationErrorsDecoder, _p0._0._0._0.body);
						if (_p1.ctor === 'Ok') {
							return A2(
								_elm_lang$core$Platform_Cmd_ops['!'],
								_elm_lang$core$Native_Utils.update(
									model,
									{
										subscribeForm: A2(_user$project$Model$Invalid, formFields, _p1._0)
									}),
								{ctor: '[]'});
						} else {
							return A2(
								_elm_lang$core$Platform_Cmd_ops['!'],
								_elm_lang$core$Native_Utils.update(
									model,
									{
										subscribeForm: A2(_user$project$Model$Errored, formFields, 'Oops! Something went wrong!')
									}),
								{ctor: '[]'});
						}
					} else {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									subscribeForm: A2(_user$project$Model$Errored, formFields, 'Oops! Something went wrong!')
								}),
							{ctor: '[]'});
					}
				}
		}
	});
